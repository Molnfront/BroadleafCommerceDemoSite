<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
		http://www.springframework.org/schema/jee
		http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
		http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
        
    <!-- 
    This application context demonstrates how to use the class transformation features of Broadleaf Commerce.
    Class transformation is useful when you would like to alter some default annotation or class structure element
    in a Broadleaf class - specifically to override the default inheritance strategy strategy of Broadleaf
    Commerce entities and instead set the inheritance strategy to SINGLE_TABLE.
    
    Note the inclusion of the <context:load-time-weaver/> element. Also, the class transformer must be declared
    with the Broadleaf persistence unit manager:
    
    	<property name="classTransformers">
            <list>
            	<bean class="org.broadleafcommerce.profile.extensibility.jpa.convert.inheritance.SingleTableInheritanceClassTransformer" />
            </list>
        </property>
        
    Also, the container must be started with the Broadleaf load time weaver implementation. This is usually accomplished by including a
    javaagent at the java startup command for the server. The syntax is something along these lines:
    
    java .... -javaagent:{/path/to/broadleaf-instrument/jar}
    
    Whatever startup approach you use for your container, it should be altered to include the javaagent syntax and the spring-instrument jar
    should be available in your filesystem at the path specified.
        
    see persistence-demo-entity-transform.xml for an example of how to configure which classes are included in the transformation.
     -->
    
    <context:load-time-weaver weaver-class="org.broadleafcommerce.profile.extensibility.jpa.BroadleafLoadTimeWeaver"/>

    <bean id="blPersistenceUnitManager"
          class="org.broadleafcommerce.profile.extensibility.jpa.MergePersistenceUnitManager">
        <property name="persistenceXmlLocations">
            <list>
                <value>classpath*:/META-INF/persistence-demo-entity-transform.xml</value>
            </list>
        </property>
        <property name="dataSources">
            <map>
                <entry key="jdbc/web" value-ref="webDS"/>
                <entry key="jdbc/webSecure" value-ref="webDS"/>
            </map>
        </property>
        <property name="defaultDataSource" ref="webDS"/>
        <property name="classTransformers">
            <list>
            	<bean class="org.broadleafcommerce.profile.extensibility.jpa.convert.inheritance.SingleTableInheritanceClassTransformer" />
            </list>
        </property>
    </bean>
    
    <bean id="webDS" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<property name="url" value="jdbc:hsqldb:hsql://localhost/broadleaf;ifexists=true" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>
	
	<bean id="blCacheManager"
          class="org.broadleafcommerce.profile.extensibility.cache.ehcache.MergeEhCacheManagerFactoryBean">
        <property name="shared" value="true"/>
        <property name="configLocations">
            <list>
                <value>classpath:bl-override-ehcache.xml</value>
            </list>
        </property>
    </bean>
    
</beans>